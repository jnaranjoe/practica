{
  "swagger": "2.0",
  "info": {
    "description": "Documentación  de WS para Sistema Secoed V3",
    "version": "1.0.0",
    "title": "Documentación  de WS para Sistema Secoed V3",
    "termsOfService": "Leer wwww.secoed.com",
    "contact": {
      "email": "juan.cedenor@ug.edu.ec"
    },
    "license": {
      "name": "FCI UG Secoed",
      "url": "none"
    }
  },
  "tags": [
    {
      "name": "WS Secoed",
      "description": "WS Secoed"
    },
    {
      "name": "WS Security",
      "description": "WS Security"
    },
    {
      "name": "WS Recommender",
      "description": "Módulo de Recomendaciones"
    }
  ],
  "paths": {

    "/Audit/list": {

      "get": {
        "tags": [
          "WS Security"
        ],
        "summary": "Audit   SQL: List ",
        "description": "Lista de comandos  SQL ",
        "operationId": "auditSQLList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Error/list": {
      "get": {
        "tags": [
          "WS Security"
        ],
        "summary": "Error : List ",
        "description": "Lista de Errores del Sistema ",
        "operationId": "errorList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Notification/list":{
      "get": {
        "tags": [
          "WS Security"
        ],
        "summary": "Lista de Notificiones",
        "description": "Lista de Notificiones",
        "operationId": "NotificationList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Notification/read": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "Notificacion: Update ",
        "description": "Actualization:  the notification is read",
        "operationId": "notificationUpdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Notification_is_read",
            "description": "Notification_is_read",
            "required": true,
            "schema": {
              "$ref": "#/definitions/notification_update"
            }


          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/security/login": {
      "post": {
        "tags": [
          "WS Security"
        ],
        "summary": "Login de Usuario",
        "description": "Login de Usuario",
        "operationId": "loginUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/loginUserDef"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/security/logout": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "Salir",
        "description": "Salir  de la aplicacion",
        "operationId": "LogOut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "logout",
            "description": " the resource to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/logoutUserDef"
            }


          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/user/list": {
      "get": {
        "tags": [
          "WS Security"
        ],
        "summary": "Lista de Usuarios",
        "description": "Lista de Usuarios",
        "operationId": "userList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/user/actulization/data": {
      "get": {
        "tags": [
          "WS Security"
        ],
        "summary": "Datos de Usuario",
        "description": "Se envia los datos al  usuarios cuando se recarga la pagina",
        "operationId": "userActualizationData",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/user/change-password": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "User: Update Password",
        "description": "Se actualiza la contraseña cuando, cuando esta conectado",
        "operationId": "UserUpdatePassword",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "User_id",
            "description": "ID of the resource to Delete",
            "required": true,
            "schema": {
              "$ref": "#/definitions/update_password"
            }


          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/security/recover-password": {

      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "User: Send Mail from reset password",
        "description": "Se en via el correo para actualizar la contraseña",
        "operationId": "SendEmailPassword",
        "produces": [
          "application/json"
        ],
        "parameters": [


          {
            "in": "body",
            "name": "User_id",
            "description": "Mail from reset password",
            "required": true,
            "schema": {
              "$ref": "#/definitions/send_email_password"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/security/change-password":{
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "User: Update Password Email",
        "description": "Se actualiza la contraseña mediante correo ",
        "operationId": "EmailUpdatePassword",
        "produces": [
          "application/json"
        ],
        "parameters": [


          {
            "in": "body",
            "name": "User_id",
            "description": "ID of the resource to Delete",
            "required": true,
            "schema": {
              "$ref": "#/definitions/update_email_password"
            }


          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/user/insert": {
      "post": {
        "tags": [
          "WS Security"
        ],
        "summary": "User: Insert ",
        "description": "Insert un nuevo usuario",
        "operationId": "user_Insert",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "User_Rol_Insert",
            "description": "Information to Insert",
            "required": true,
            "schema": {
              "$ref": "#/definitions/insert_user"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/user/delete": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "User: Delete",
        "description": "Eliminar un User",
        "operationId": "UserDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "User_id",
            "description": "ID of the resource to Delete",
            "required": true,
            "schema": {
              "$ref": "#/definitions/delete_id"
            }


          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/user/update": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "User: Delete",
        "description": "update un User",
        "operationId": "Userupdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "User_id",
            "description": "ID of the resource to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/update_id"
            }


          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/person/get": {
      "get": {
        "tags": [
          "WS Security"
        ],
        "summary": "Obtener datos de Persona ",
        "description": "Obtener datos de Persona",
        "operationId": "PersonGet",
        "produces": [
          "application/json"
        ],
        "parameters": [

        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/RolSistem/insert":{
      "post": {
        "tags": [
          "WS Security"
        ],
        "summary": "Rol del Sistema: Insert ",
        "description": "Insert un nuevo rol",
        "operationId": "rolInsert",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "RolSistem_Insert",
            "description": "Information to Insert",
            "required": true,
            "schema": {
              "$ref": "#/definitions/insert_rolsistem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/RolSistem/list":{
      "get": {
        "tags": [
          "WS Security"
        ],
        "summary": "Rol del Sistema: List ",
        "description": "Lista de los roles",
        "operationId": "rolList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/RolSistem/delete": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "Rol del Sistema: Update ",
        "description": "Eliminar un Rol",
        "operationId": "rolDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Rol_id",
            "description": "ID of the resource to delete",
            "required": true,
            "schema": {
              "$ref": "#/definitions/delete_id"
            }


          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/RolSistem/update": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "Rol del Sistema: Update ",
        "description": "Actualizar un Rol",
        "operationId": "rolUpdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Rol_id",
            "description": "ID of the resource to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/up_rolsistem"
            }


          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/UserRol/insert": {
      "post": {
        "tags": [
          "WS Security"
        ],
        "summary": "UserRol: Insert ",
        "description": "Asignar un nuevo rol al Usuario",
        "operationId": "UserRolInsert",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "UserRol_Insert",
            "description": "Information to Insert",
            "required": true,
            "schema": {
              "$ref": "#/definitions/insert_useRol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/UserRol/list":{
      "get": {
        "tags": [
          "WS Security"
        ],
        "summary": "  Roles y Menu: List",
        "description": "Lista de Roles y Menu",
        "operationId": "RolUserList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/UserRol/delete": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "  Roles y Menu: Delete",
        "description": "Eliminar un  Rol_Menu",
        "operationId": "RolUserDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "UserRol_id",
            "description": "ID of the resource to Delete",
            "required": true,
            "schema": {
              "$ref": "#/definitions/delete_id"
            }


          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/UserRol/update": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "  Roles y Menu: Update",
        "description": "Aectualizar  Roles y Menu",
        "operationId": "UserRolList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "modulo_id",
            "description": "ID of the resource to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/up_useRol"
            }


          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Module/insert": {
      "post": {
        "tags": [
          "WS Security"
        ],
        "summary": " Modulo : Insert",
        "description": "Insertar un Modulo",
        "operationId": "ModuloInsert",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/insert_modulo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Module/list":{
      "get": {
        "tags": [
          "WS Security"
        ],
        "summary": "Modulo: List",
        "description": "Lista de Modulos",
        "operationId": "ModuloList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Module/delete": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "Modulo: Delete",
        "description": "Eliminar un Modulo",
        "operationId": "ModuloDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "modulo_id",
            "description": "ID of the resource to Delete",
            "required": true,
            "schema": {
              "$ref": "#/definitions/delete_id"
            }


          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Module/update": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "Modulo: Update",
        "description": "Actualizar un Modulo",
        "operationId": "ModuloUpdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "modulo_id",
            "description": "ID of the resource to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/up_modulo"
            }


          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Menu/insert": {
      "post": {
        "tags": [
          "WS Security"
        ],
        "summary": "Menu: Insert",
        "description": "Ingresar un nuevo Menu",
        "operationId": "MenuInsert",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/insert_menu"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Menu/list":{
      "get": {
        "tags": [
          "WS Security"
        ],
        "summary": "Menu: List",
        "description": "Lista de Menu",
        "operationId": "MenuList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Menu/delete": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "Menu: Delete",
        "description": "Eliminar un nuevo Menu",
        "operationId": "MenuDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "menu_id",
            "description": "ID of the resource to Delete",
            "required": true,
            "schema": {
              "$ref": "#/definitions/delete_id"
            }


          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Menu/update": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "Menu: Update",
        "description": "Actualizar un nuevo Menu",
        "operationId": "MenuUpdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "menu_update",
            "description": " the resource to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/up_menu"
            }


          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/MenuRol/insert": {
      "post": {
        "tags": [
          "WS Security"
        ],
        "summary": "MenuRol: Insert",
        "description": "Ingresar un nuevo Menu y Rol",
        "operationId": "MenuRolInsert",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/insert_menurol"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/MenuRol/list":{
      "get": {
        "tags": [
          "WS Security"
        ],
        "summary": "MenuRol: List",
        "description": "Lista de Menus y Roles",
        "operationId": "MenuRolList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/MenuRol/delete": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "Menu: Delete",
        "description": "Eliminar un  Menu-Rol",
        "operationId": "MenuRolDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "MenuRol_id",
            "description": "ID of the resource to Delete",
            "required": true,
            "schema": {
              "$ref": "#/definitions/delete_id"
            }


          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/MenuRol/update": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "Menu: Update",
        "description": "Actualizar un nuevo Menu-Rol",
        "operationId": "MenuRolUpdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "menu_update",
            "description": " the resource to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/up_menurol"
            }


          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/urcp/list":{
      "get": {
        "tags": [
          "WS Security"
        ],
        "summary": "urcp: List",
        "description": "Lista de asiganciones de carrera periodo activos a un usuario rol",
        "operationId": "urcpList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/urcp/insert":{
      "post": {
        "tags": [
          "WS Security"
        ],
        "summary": "urcp: Insert",
        "description": "Asignar una nueva carrear-periodo activo un usuario con rol",
        "operationId": "urcpInsert",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/insert_urcp"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/urcp/update":{
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "Menu: Update",
        "description": "Actualizar la carrera-periodo del usuario",
        "operationId": "urcpUpdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "urcp_update",
            "description": " the resource to update",
            "required": true,
            "schema": {
              "$ref": "#/definitions/update_urcp"
            }


          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/urcp/delete": {
      "patch": {
        "tags": [
          "WS Security"
        ],
        "summary": "Menu: Delete",
        "description": "Eliminar la relacion entre usuario-rol carrera-periodo",
        "operationId": "urcpDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "urcp_id",
            "description": "ID of the resource to Delete",
            "required": true,
            "schema": {
              "$ref": "#/definitions/delete_id"
            }


          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/active-period-faculty/list":{
      "post": {
        "tags": [
          "WS Security"
        ],
        "summary": "Menu: Delete",
        "description": "Lista de las carrera-periodo activos por facultad",
        "operationId": "activecpList",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "faculty_id",
            "description": "ID of the resource to search",
            "required": true,
            "schema": {
              "$ref": "#/definitions/select_activecp_faculty"
            }


          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },


    "/admin/unit_academic/list": {
      "get": {
        "tags": [
          "Administrador"
        ],
        "summary": "Lista de Unidades Académicas",
        "description": "Obtiene una lista de todas las unidades académicas",
        "operationId": "listAcademyUnits",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/unit_academic/list/{id}": {
      "get": {
        "tags": [
          "Administrador"
        ],
        "summary": "Obtener unidad academica por ID",
        "description": "Obtiene una unidades académicas por id",
        "operationId": "GetAcademyUnitById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la unidad académica",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/unit_academic/add": {
      "post": {
        "tags": [
          "Administrador"
        ],
        "summary": "Agregar Unidad Académica",
        "description": "Agregar los datos de una unidad académica específica",
        "operationId": "AddAcademyUnit",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "academy_unit_insert",
            "description": "Datos insertados de la unidad académica",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Nombre de la unidad académica"
                },
                "id_ies": {
                  "type": "integer",
                  "description": "ID de la institución de educación superior (IES)"
                },
                "description": {
                  "type": "string",
                  "description": "Descripción de la unidad académica"
                },
                "phone_number": {
                  "type": "string",
                  "description": "Número de teléfono de la unidad académica (opcional)"
                },
                "address": {
                  "type": "string",
                  "description": "Dirección de la unidad académica (opcional)"
                },
                "manager_name": {
                  "type": "string",
                  "description": "Nombre del director de la unidad académica (opcional)"
                },
                "web_site": {
                  "type": "string",
                  "description": "Sitio web de la unidad académica (opcional)"
                },
                "mail_address": {
                  "type": "string",
                  "description": "Correo electrónico de la unidad académica (opcional)"
                },
                  "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unidad académica actualizada exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error al actualizar la unidad académica",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/unit_academic/update": {
      "patch": {
        "tags": [
          "Administrador"
        ],
        "summary": "Actualizar Unidad Académica",
        "description": "Actualiza los datos de una unidad académica específica",
        "operationId": "updateAcademyUnit",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "academy_unit_update",
            "description": "Datos actualizados de la unidad académica",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Id de la unidad academica"
                },
                "name": {
                  "type": "string",
                  "description": "Nombre de la unidad académica"
                },
                "id_ies": {
                  "type": "integer",
                  "description": "ID de la institución de educación superior (IES)"
                },
                "description": {
                  "type": "string",
                  "description": "Descripción de la unidad académica"
                },
                "phone_number": {
                  "type": "string",
                  "description": "Número de teléfono de la unidad académica (opcional)"
                },
                "address": {
                  "type": "string",
                  "description": "Dirección de la unidad académica (opcional)"
                },
                "manager_name": {
                  "type": "string",
                  "description": "Nombre del director de la unidad académica (opcional)"
                },
                "web_site": {
                  "type": "string",
                  "description": "Sitio web de la unidad académica (opcional)"
                },
                "mail_address": {
                  "type": "string",
                  "description": "Correo electrónico de la unidad académica (opcional)"
                },
                  "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unidad académica actualizada exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error al actualizar la unidad académica",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/unit_academic/delete/{id}/{user}": {
      "delete": {
        "tags": [
          "Administrador"
        ],
        "summary": "Eliminar Ciclo por ID",
        "description": "Elimina un ciclo específico por su ID",
        "operationId": "deleteAcademyUnit",

        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la unidad academica a eliminar",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "user",
            "in": "path",
            "description": "usuario del proceso",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/AdminCicleResponse"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Career_Period/list": {
      "get": {
        "tags": [
          "Administrador"
        ],
        "summary": "Lista de Períodos de Carrera",
        "description": "Obtiene una lista de todos los períodos de carrera",
        "operationId": "listCareerPeriods",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Career_Period/list/{id}": {
      "get": {
        "tags": [
          "Administrador"
        ],
        "summary": "Obtener Ciclo  por ID",
        "description": "Obtiene un ciclo  específico por su ID",
        "operationId": "get_career_period_by_id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del ciclo ",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/AdminCicleResponse"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Career_Period/add": {
      "post": {
        "tags": [
          "Administrador"
        ],
        "summary": "Agregar Periodo Academico",
        "description": "Agregar los datos de un periodo academico específica",
        "operationId": "AddAcademyUnit",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "academy_unit_insert",
            "description": "Datos insertados del Periodo Academico",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ucp_id_period": {
                  "type": "integer",
                  "description": "Numero de la unidad académica"
                },
                "ucp_id_career": {
                  "type": "integer",
                  "description": "ID de la institución de educación superior (IES)"
                },
                "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unidad académica actualizada exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error al actualizar la unidad académica",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Career_Period/update": {
      "patch": {
        "tags": [
          "Administrador"
        ],
        "summary": "Actualizar Periodo de Carrera",
        "description": "Actualiza los datos de un periodo de carrera específica",
        "operationId": "update_career_period",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Career_period_update",
            "description": "Datos actualizados del periodo de carrera",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ucp_id": {
                  "type": "integer",
                  "description": "Id del periodo de carrera"
                },
                "ucp_id_period": {
                  "type": "integer",
                  "description": "ID del periodo"
                },
                "ucp_id_career": {
                  "type": "integer",
                  "description": "ID de la Carrera"
                },
                "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unidad académica actualizada exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error al actualizar la unidad académica",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Career_Period/delete/{id}/{user}": {
      "delete": {
        "tags": [
          "Administrador"
        ],
        "summary": "Eliminar Periodo de Carrera por ID",
        "description": "Elimina un Periodo de Carrera específico por su ID",
        "operationId": "delete_admin_period",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del periodo de carrera a eliminar",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "user",
            "in": "path",
            "description": "usuario del proceso",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/AdminCicleResponse"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/cycles/list": {
      "get": {
        "tags": [
          "Administrador"
        ],
        "summary": "Lista de Ciclos ",
        "description": "Obtiene una lista de todos los ciclos ",
        "operationId": "listCycles",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "items": {
                "$ref": "#/definitions/Response"
              }
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/cycles/add": {
      "post": {
        "tags": [
          "Administrador"
        ],
        "summary": "Agregar Ciclo",
        "description": "Agregar los datos a un ciclo específico",
        "operationId": "add_admin_cycle",
        "produces": [
          "application/json"
        ],


        "parameters": [
          {
            "in": "body",
            "name": "Cicle_add",
            "description": "Datos agregados del ciclo",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Id del ciclo"
                },
                "value": {
                  "type": "string",
                  "description": "Nombre de la unidad académica"
                },
                "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          }
        ],


        "responses": {
          "200": {
            "description": "Unidad académica actualizada exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error al actualizar la unidad académica",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/cycles/update": {
      "patch": {
        "tags": [
          "Administrador"
        ],
        "summary": "Actualizar Ciclo",
        "description": "Actualiza los datos de un ciclo específico",
        "operationId": "update_admin_cycle",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Cicle_update",
            "description": "Datos actualizados del ciclo",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Id del ciclo"
                },
                "value": {
                  "type": "string",
                  "description": "Nombre de la unidad académica"
                },
                "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unidad académica actualizada exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error al actualizar la unidad académica",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/cycles/delete/{id}/{user}": {
      "delete": {
        "tags": [
          "Administrador"
        ],
        "summary": "Eliminar Ciclo por ID",
        "description": "Elimina un ciclo específico por su ID",
        "operationId": "delete_admin_cicle",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del periodo de carrera a eliminar",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "user",
            "in": "path",
            "description": "usuario del proceso",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/AdminCicleResponse"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/persons/list": {
      "get": {
        "tags": [
          "Administrador"
        ],
        "summary": "Lista de Personas Admin",
        "description": "Obtiene una lista de todas las personas ",
        "operationId": "listAdminPersons",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"

          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "items": {
                "$ref": "#/definitions/AdminPersonResponse"
              }
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/persons/add": {
      "post": {
        "tags": [
          "Administrador"
        ],
        "summary": "Agregar Personas",
        "description": "Agregar los datos de una Persona",
        "operationId": "add_admin_person",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Person_insert",
            "description": "Datos insertados de la Persona",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "per_identification": {
                  "type": "string",
                  "description": "Nombre de la unidad académica"
                },
                "per_names": {
                  "type": "string",
                  "description": "ID de la institución de educación superior (IES)"
                },
                "per_surnames": {
                  "type": "string",
                  "description": "Descripción de la unidad académica"
                },
                "per_genre_id": {
                  "type": "integer",
                  "description": "Número de teléfono de la unidad académica (opcional)"
                },
                "per_marital_status_id": {
                  "type": "integer",
                  "description": "Dirección de la unidad académica (opcional)"
                },
                "per_country": {
                  "type": "string",
                  "description": "Nombre del director de la unidad académica (opcional)"
                },
                "per_city": {
                  "type": "string",
                  "description": "Sitio web de la unidad académica (opcional)"
                },
                "per_address": {
                  "type": "string",
                  "description": "Correo electrónico de la unidad académica (opcional)"
                },
                "per_phone": {
                  "type": "string",
                  "description": "Correo electrónico de la unidad académica (opcional)"
                },
                "per_mail": {
                  "type": "string",
                  "description": "Correo electrónico de la unidad académica (opcional)"
                },
                "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unidad académica actualizada exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error al actualizar la unidad académica",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/persons/update": {
      "patch": {
        "tags": [
          "Administrador"
        ],
        "summary": "Actualizar Personas",
        "description": "Actualizar los datos de una Persona",
        "operationId": "update_admin_person",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Person_insert",
            "description": "Datos insertados de la Persona",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "per_id": {
                  "type": "integer",
                  "description": "Nombre de la unidad académica"
                },
                "per_identification": {
                  "type": "string",
                  "description": "Nombre de la unidad académica"
                },
                "per_names": {
                  "type": "string",
                  "description": "ID de la institución de educación superior (IES)"
                },
                "per_surnames": {
                  "type": "string",
                  "description": "Descripción de la unidad académica"
                },
                "per_genre_id": {
                  "type": "integer",
                  "description": "Número de teléfono de la unidad académica (opcional)"
                },
                "per_marital_status_id": {
                  "type": "integer",
                  "description": "Dirección de la unidad académica (opcional)"
                },
                "per_country": {
                  "type": "string",
                  "description": "Nombre del director de la unidad académica (opcional)"
                },
                "per_city": {
                  "type": "string",
                  "description": "Sitio web de la unidad académica (opcional)"
                },
                "per_address": {
                  "type": "string",
                  "description": "Correo electrónico de la unidad académica (opcional)"
                },
                "per_phone": {
                  "type": "string",
                  "description": "Correo electrónico de la unidad académica (opcional)"
                },
                "per_mail": {
                  "type": "string",
                  "description": "Correo electrónico de la unidad académica (opcional)"
                },
                "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unidad académica actualizada exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error al actualizar la unidad académica",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/persons/delete/{id}/{user}": {
      "delete": {
        "tags": [
          "Administrador"
        ],
        "summary": "Eliminar Persona por ID",
        "description": "Elimina una Persona específico por su ID",
        "operationId": "delete_admin_person",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la persona a eliminar",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "user",
            "in": "path",
            "description": "usuario del proceso",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/AdminCicleResponse"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/ies/list": {
      "get": {
        "tags": ["Administrador"],
        "summary": "Lista de Instituciones Educativas Superiores",
        "description": "Obtiene una lista de todas las Instituciones Educativas Superiores",
        "operationId": "ListAllIes",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID de la Institución Educativa Superior",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/ies/list/{id}": {
      "get": {
        "tags": [
          "Administrador"
        ],
        "summary": "Obtener Ciclo  por ID",
        "description": "Obtiene un ciclo  específico por su ID",
        "operationId": "ListAllIes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del ciclo ",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }

        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/ies/add": {
      "post": {
        "tags": [
          "Administrador"
        ],
        "summary": "Agregar Administradores",
        "description": "Agregar los datos de un administrador específico",
        "operationId": "Add_Ies",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Ies_insert",
            "description": "Datos insertados de Administradores",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Nombre del Administrador"
                },
                "description": {
                  "type": "string",
                  "description": "Descripción del Administrador"
                },
                "phone_number": {
                  "type": "string",
                  "description": "Número de teléfono del Administrador (opcional)"
                },
                "address": {
                  "type": "string",
                  "description": "Dirección del Administrador (opcional)"
                },
                "manager_name": {
                  "type": "string",
                  "description": "Nombre del director del Administrador (opcional)"
                },
                "web_site": {
                  "type": "string",
                  "description": "Sitio web del Administrador (opcional)"
                },
                "mail_address": {
                  "type": "string",
                  "description": "Correo electrónico del Administrador (opcional)"
                },
                  "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
             "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
           "description": "Error al agregar Adminstrador",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/ies/update": {
      "patch": {
        "tags": [
          "Administrador"
        ],
        "summary": "Actualizar Administradores",
        "description": "Actualiza los datos de un Administrador específica",
        "operationId": "Update_Ies",
        "produces": [
          "application/json"
        ],
        "parameters": [

        ],

        "responses": {
          "200": {
             "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
           "description": "Error al agregar Adminstrador",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/ies/delete/{id}/{user}": {
      "delete": {
        "tags": [
          "Administrador"
        ],
        "summary": "Eliminar Persona por ID",
        "description": "Elimina una Persona específico por su ID",
        "operationId": "delete_admin_person",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la persona a eliminar",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "user",
            "in": "path",
            "description": "usuario del proceso",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/AdminCicleResponse"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
    }
    },
    "/admin/Marital_status/list": {
      "get": {
        "tags": [
          "Administrador"
        ],
        "summary": "Lista de Estados civiles",
        "description": "Obtiene una lista de todos los estados civiles",
        "operationId": "ListAllMaritalStatus",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Marital_status/list/{id}": {
      "get": {
        "tags": ["Administrador"],
        "summary": "Obtener Estado Marital por ID",
        "description": "Obtiene un Estado Marital específico por su ID",
        "operationId": "GetMaritalStatusById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del Estado Marital",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Marital_status/add": {
      "post": {
        "tags": ["Administrador"],
        "summary": "Agregar Estado Civil",
        "description": "Agregar los datos de un Estado Civil específico",
        "operationId": "AddMaritalStatus",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "Marital_Status_insert",
            "description": "Datos insertados del Estado Civil",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "status_name": {
                  "type": "string",
                  "description": "Estado Civil"
                },
                "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unidad académica actualizada exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error al actualizar la unidad académica",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Marital_status/update": {
      "patch": {
        "tags": ["Administrador"],
        "summary": "Actualizar Estado Civil",
        "description": "Actualiza un estado civil específico",
        "operationId": "UpdateMaritalStatus",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "Marital_Status_update",
            "description": "Datos actualizados del estado civil",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Id del estado civil a actualizar"
                },
                "status_name": {
                  "type": "string",
                  "description": "Nombre del estado civil"
                },
                "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unidad académica actualizada exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error al actualizar la unidad académica",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Marital_status/delete/{id}/{user}": {
      "delete": {
        "tags": ["Administrador"],
        "summary": "Eliminar estado Civil por ID",
        "description": "Elimina un estado civil específico por su ID",
        "operationId": "DeleteMaritalStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del estado civil a eliminar",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "user",
            "in": "path",
            "description": "usuario del proceso",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/AdminCicleResponse"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Parameter_list/list": {
      "get": {
        "tags": [
          "Administrador"
        ],
        "summary": "Lista de Parametros",
        "description": "Obtiene una lista de todos los Parametros ",
        "operationId": "ListAllParameterList",
        "produces": [
          "application/json"
        ],


        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Parameter_list/add": {
      "post": {
        "tags": ["Administrador"],
        "summary": "Agregar Lista de Parametros",
        "description": "Agregar los datos de un parametro específico",
        "operationId": "AddParameterList",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "Parameter_List_insert",
            "description": "Datos insertados del Parametro",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "pli_code_parameter": {
                  "type": "string",
                  "description": "Codigo de Parametro"
                },
                "pli_string_value_return": {
                  "type": "string",
                  "description": "Retorno de valor"
                },
                "pli_numeric_value_return": {
                  "type": "integer",
                  "description": "valor de retorno"
                },
                "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Parameter_list/update": {
      "patch": {
        "tags": ["Administrador"],
        "summary": "Actualizar Lista de Parametros",
        "description": "Actualiza los datos de un Parametro específico",
        "operationId": "UpdateParameterList",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "Parameter_List_update",
            "description": "Datos actualizados del Parametro",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "pli_id": {
                  "type": "integer",
                  "description": "Id de la unidad academica"
                },
                "pli_code_parameter": {
                  "type": "string",
                  "description": "Codigo de Parametro"
                },
                "pli_string_value_return": {
                  "type": "string",
                  "description": "Retorno de valor string"
                },
                "pli_numeric_value_return": {
                  "type": "integer",
                  "description": "Valor numerico de retorno"
                },
                "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          },
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error al actualizar la lista de parametros",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Parameter_list/delete/{id}/{user}": {
      "delete": {
        "tags": ["Administrador"],
        "summary": "Eliminar lista de parametros por ID",
        "description": "Elimina una lista de parametros específica por su ID",
        "operationId": "DeleteParamaterList",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la lista de parametros a eliminar",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "user",
            "in": "path",
            "description": "usuario del proceso",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/AdminCicleResponse"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Period/list": {
      "get": {
        "tags": ["Administrador"],
        "summary": "Lista de Periodos",
        "description": "Obtiene una lista de todos los Periodos",
        "operationId": "ListAllPeriods",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Period/list/{id}": {
      "get": {
        "tags": ["Administrador"],
        "summary": "Obtener Periodo por ID",
        "description": "Obtiene un Periodo específico por su ID",
        "operationId": "GetPeriodById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del Periodo",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Period/add": {
      "post": {
        "tags": ["Administrador"],
        "summary": "Agregar Periodo",
        "description": "Agregar los datos de un Periodo Específico",
        "operationId": "AddPeriod",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Period_insert",
            "description": "Datos insertados del Periodo",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Nombre del Periodo"
                },
                "description": {
                  "type": "string",
                  "description": "Descripción del Periodo"
                },
                "anio": {
                  "type": "integer",
                  "description": "Año del Periodo"
                },
                "ciclo_id": {
                  "type": "integer",
                  "description": "ID del ciclo asociado (opcional)"
                },
                "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Period/update": {
      "patch": {
        "tags": ["Administrador"],
        "summary": "Actualizar Periodo",
        "description": "Actualiza los datos de un Periodo",
        "operationId": "UpdatePeriod",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "Period_update",
            "description": "Datos actualizados del Periodo",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Id del Periodo"
                },
                "name": {
                  "type": "string",
                  "description": "Nombre del Periodo"
                },
                "description": {
                  "type": "string",
                  "description": "Descripción del Periodo"
                },
                "anio": {
                  "type": "integer",
                  "description": "Año del periodo"
                },
                "ciclo_id": {
                  "type": "integer",
                  "description": "Ciclo Lectivo"
                },
                "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error al actualizar el Periodo",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Period/delete/{id}/{user}": {
      "delete": {
        "tags": ["Administrador"],
        "summary": "Eliminar Periodo por ID",
        "description": "Elimina un Periodo específico por su ID",
        "operationId": "DeletePeriod",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del periodo a eliminar",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "user",
            "in": "path",
            "description": "Usuario del proceso",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/AdminCicleResponse"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Person_genre/list": {
      "get": {
        "tags": ["Administrador"],
        "summary": "Lista de Personas",
        "description": "Obtiene una lista de los géneros de las personas",
        "operationId": "ListAllPersonGenre",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Person_genre/list/{id}": {
      "get": {
        "tags": ["Administrador"],
        "summary": "Obtener Género por ID",
        "description": "Obtiene un género específico por su ID",
        "operationId": "GetPersonGenreById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del género",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Person_genre/add": {
      "post": {
        "tags": ["Administrador"],
        "summary": "Agregar Género",
        "description": "Agregar un género específico",
        "operationId": "AddAPersonGenre",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "Person_Genre_insert",
            "description": "Datos insertados del género",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "genre_name": {
                  "type": "string",
                  "description": "Nombre del género"
                },
                "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Género agregado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error al agregar el género",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Person_genre/update": {
      "patch": {
        "tags": ["Administrador"],
        "summary": "Actualizar Género",
        "description": "Actualiza un Género específico",
        "operationId": "UpdatePersonGenre",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "Person_Genre_update",
            "description": "Género actualizado",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "ID del Género"
                },
                "genre_name": {
                  "type": "string",
                  "description": "Nombre del Género"
                },
                "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Género actualizado exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error al actualizar el Género",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/Person_genre/delete/{id}/{user}": {
      "delete": {
        "tags": ["Administrador"],
        "summary": "Eliminar Género de Persona por ID",
        "description": "Elimina un Género de Persona específico por su ID",
        "operationId": "DeletePersonGenre",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del Género de Persona a eliminar",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "user",
            "in": "path",
            "description": "Usuario del proceso",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/AdminCicleResponse"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/University_Career/list": {
      "get": {
        "tags": ["Administrador"],
        "summary": "Lista de Carreras Universitarias",
        "description": "Obtiene una lista de las Carreras Universitarias",
        "operationId": "ListAllUniversityCareer",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/University_Career/list/{id}": {
      "get": {
        "tags": ["Administrador"],
        "summary": "Obtener Carrera Universitaria por ID",
        "description": "Obtiene una Carrera Universitaria específica por su ID",
        "operationId": "GetUniversityCareerById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la Carrera Universitaria",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/AdminCicleResponse"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/University_Career/add": {
      "post": {
        "tags": ["Administrador"],
        "summary": "Agregar Carrera Universitaria",
        "description": "Agregar los datos de una Carrera Universitaria específica",
        "operationId": "AddAUniversityCareer",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "University_Career_insert",
            "description": "Datos insertados de la Carrera Universitaria",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Nombre de la Carrera Universitaria"
                },
                "id_academic_unit": {
                  "type": "integer",
                  "description": "ID de la Carrera Universitaria"
                },
                "description": {
                  "type": "string",
                  "description": "Descripción de la Carrera Universitaria"
                },
                "title_granted": {
                  "type": "string",
                  "description": "Título obtenido"
                },
                "phone_number": {
                  "type": "string",
                  "description": "Número de teléfono (opcional)"
                },
                "address": {
                  "type": "string",
                  "description": "Dirección (opcional)"
                },
                "manager_name": {
                  "type": "string",
                  "description": "Nombre del director de la Carrera Universitaria (opcional)"
                },
                "web_site": {
                  "type": "string",
                  "description": "Sitio web de la Carrera Universitaria (opcional)"
                },
                "mail_address": {
                  "type": "string",
                  "description": "Correo electrónico de la Carrera Universitaria (opcional)"
                },
                "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Carrera Universitaria actualizada exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error al actualizar la Carrera Universitaria",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/University_Career/update": {
      "patch": {
        "tags": [
          "Administrador"
        ],
        "summary": "Actualizar Carrera Universitaria",
        "description": "Actualiza los datos de una Carrera Universitaria específica",
        "operationId": "UpdateUniversityCareer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "University_Career_update",
            "description": "Datos actualizados de la Carrera Universitaria",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Id de la Carrera Universitaria"
                },
                "name": {
                  "type": "string",
                  "description": "Nombre de la Carrera Universitaria"
                },
                "id_academic_unit": {
                  "type": "integer",
                  "description": "ID de la institución Carrera Universitaria"
                },
                "description": {
                  "type": "string",
                  "description": "Descripción de la Carrera Universitaria"
                },
                "title_granted": {
                  "type": "string",
                  "description": "Titulo de la Carrera"
                },
                "phone_number": {
                  "type": "string",
                  "description": "Número de teléfono de la Carrera Universitaria (opcional)"
                },
                "address": {
                  "type": "string",
                  "description": "Dirección de la Carrera Universitaria (opcional)"
                },
                "manager_name": {
                  "type": "string",
                  "description": "Nombre del director de la Carrera Universitaria (opcional)"
                },
                "web_site": {
                  "type": "string",
                  "description": "Sitio web de la Carrera Universitaria (opcional)"
                },
                "mail_address": {
                  "type": "string",
                  "description": "Correo electrónico de la Carrera Universitaria (opcional)"
                },
                  "user_process": {
                  "type": "string",
                  "description": "Usuario que ejecuta el proceso"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unidad académica actualizada exitosamente",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error al actualizar la unidad académica",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/admin/University_Career/delete/{id}/{user}": {
      "delete": {
        "tags": [
          "Administrador"
        ],
        "summary": "Eliminar Carrera Universitaria por ID",
        "description": "Elimina una Carrera Universitaria específica por su ID",
        "operationId": "DeleteUniversityCareer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de la Carrera Universitaria a eliminar",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "user",
            "in": "path",
            "description": "usuario del proceso",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/AdminCicleResponse"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
       }

      },
    "/Gestor/Asignacion/list": {
      "post": {
        "tags": [
          "WS Gestor"
        ],
        "summary": "Lista de Curso",
        "description": "Lista de cursos Asignacion",
        "operationId": "ListCourseAsig",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tokens"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
       }
    },
    "/Gestor/Requisitos/crear": {
      "post": {
        "tags": [
          "WS Gestor"
        ],
        "summary": "Lista de Curso",
        "description": "Lista de cursos Asignacion",
        "operationId": "ListCourseAsig",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
       }
    },
    "/Gestor/Eliminar": {
      "post": {
        "tags": [
          "WS Gestor"
        ],
        "summary": "Lista de Curso",
        "description": "Lista de cursos",
        "operationId": "ListCourseMan",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cursos"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
       }

      },
    "/Gestor/Actualizar": {
      "post": {
        "tags": [
          "WS Gestor"
        ],
        "summary": "Lista de Curso",
        "description": "Lista de cursos",
        "operationId": "ListCourseMan",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CursosPeriodo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
       }

      },
    "/Gestor/Mantenimientos/Curso/list": {
      "post": {
        "tags": [
          "WS Gestor"
        ],
        "summary": "Lista de Curso",
        "description": "Lista de cursos",
        "operationId": "ListCourseMan",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cursos"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
       }

      },
    "/Gestor/Mantenimientos/CursoAsignacion/Categorias": {
      "post": {
        "tags": [
          "WS Gestor"
        ],
        "summary": "Lista de Categorias",
        "description": "Lista de Categorias",
        "operationId": "ListCategoria",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Categorias"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
       }

      },
    "/Gestor/Mantenimientos/Curso/Create": {
      "post": {
        "tags": [
          "WS Gestor"
        ],
        "summary": "Crear Curso",
        "description": "Creacion de Cursos",
        "operationId": "CreateCourseMan",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCursos"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
       }

      },
    "/Gestor/Mantenimientos/CursoAsignacion/Create": {
      "post": {
        "tags": [
          "WS Gestor"
        ],
        "summary": "Crear Asignacion Curso",
        "description": "Creacion Asignacion de Cursos",
        "operationId": "CreateAsignacionCourseMan",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCursosAsignacion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
       }

      },
    "/Gestor/RequisitosAprobacion/list": {
      "post": {
        "tags": [
          "WS Gestor"
        ],
        "summary": "Consultar Requisitos de Aprobacion",
        "description": "Consultar Requisitos de Aprobacion",
        "operationId": "ConsultarRequisitos",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListRequisitos"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
       }

      },
    "/Gestor/ConsultasMoodle": {
      "post": {
        "tags": [
          "WS Gestor"
        ],
        "summary": "Prueba Moodle",
        "description": "Prueba Moodle",
        "operationId": "Prueba Moodle",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoodleCons"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
       }

      },
    "/Gestor/CrearCursoMoodle": {
      "post": {
        "tags": [
          "WS Gestor"
        ],
        "summary": "Prueba Moodle",
        "description": "Prueba Moodle",
        "operationId": "Prueba Moodle",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MoodleCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
       }

      },
    "/Recommender/GetRecommender/{carreraId}/{periodoId}": {
      "get": {
        "tags": [
          "WS Recommender"
        ],
        "summary": "Obtener Recomendaciones",
        "description": "Obtener Recomendaciones por carrera y periodo",
        "operationId": "getRecommender",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "carreraId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "periodoId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Recommender/GetPeriod": {
      "get": {
        "tags": [
          "WS Recommender"
        ],
        "summary": "Obtener Periodos",
        "description": "Obtener todos los periodos disponibles",
        "operationId": "getPeriod",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Recommender/GetAcademyUnit": {
      "get": {
        "tags": [
          "WS Recommender"
        ],
        "summary": "Obtener Unidades Académicas",
        "description": "Obtener todas las unidades académicas",
        "operationId": "getAcademyUnit",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Recommender/GetCareers/{facultadId}": {
      "get": {
        "tags": [
          "WS Recommender"
        ],
        "summary": "Obtener Carreras",
        "description": "Obtener todas las carreras por facultad",
        "operationId": "getCareers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "facultadId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Content/Get": {
      "get": {
        "tags": [
          "WS Recommender"
        ],
        "summary": "Obtener Contenidos",
        "description": "Obtener todos los contenidos",
        "operationId": "getContent",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Content/Create": {
      "post": {
        "tags": [
          "WS Recommender"
        ],
        "summary": "Crear Contenido",
        "description": "Crear un nuevo contenido",
        "operationId": "createContent",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Contenido a crear",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Content"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Content/Update/{contentId}": {
      "put": {
        "tags": [
          "WS Recommender"
        ],
        "summary": "Actualizar Contenido",
        "description": "Actualizar un contenido existente",
        "operationId": "updateContent",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contentId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Contenido a actualizar",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Content"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Content/Delete/{contentId}": {
      "delete": {
        "tags": [
          "WS Recommender"
        ],
        "summary": "Eliminar Contenido",
        "description": "Eliminar un contenido existente",
        "operationId": "deleteContent",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Content/Get/Ejes": {
      "get": {
        "tags": [
          "WS Recommender"
        ],
        "summary": "Obtener Ejes",
        "description": "Obtener todos los ejes recomendados",
        "operationId": "getEjes",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Content/Get/Cursos/{periodId}/{careerId}/{ejeId}": {
      "get": {
        "tags": [
          "WS Recommender"
        ],
        "summary": "Obtener Cursos",
        "description": "Obtener cursos por periodo, carrera y eje",
        "operationId": "getCourses",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "periodId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "careerId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ejeId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Questionary/List": {
      "get": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "Lista de Preguntas de Evaluación",
        "description": "Obtiene la lista de todas las preguntas de evaluación disponibles",
        "operationId": "ListAll_Questions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Questionary/List/{dimension_id}": {
      "get": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "Lista de Preguntas por Dimension",
        "description": "Obtiene una lista de todas las preguntas de evaluación disponibles",
        "operationId": "GetByDimension",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "name": "dimension_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Questionary/LikeQuestion": {
      "get": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "Like questions",
        "description": "Trae las preguntas haciendo un like de acuerdo al texto",
        "operationId": "Like_Questions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "searchText",
            "description": "Texto a buscar",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Questionary/ListDimension": {
      "get": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "List Dimension questions",
        "description": "Listado de dimensiones",
        "operationId": "List_Dimension",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Questionary/ListAnswerType": {
      "get": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "list AnswerType questions",
        "description": "Listado de tipos de respuesta",
        "operationId": "List_AnswerType",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Questionary/Add": {
      "post": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "Crear Pregunta",
        "description": "Crea una nueva pregunta de Evaluación",
        "operationId": "Add_Question",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Nuevos datos agregados",
            "required": true,
            "schema": {
              "$ref": "#/definitions/addQuestion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Questionary/Update": {
      "patch": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "Editar Pregunta",
        "description": "Permite editar una pregunta de Evaluación",
        "operationId": "Update_Question",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Nuevos datos actualizados",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "qst_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "ID de la pregunta a editar"
                },
                "qst_description": {
                  "type": "string",
                  "format": "string",
                  "description": "Editar pregunta"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Questionary/Delete/{id}": {
      "delete": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "Eliminar Pregunta",
        "description": "Eliminacion logica de una pregunta de Evaluación",
        "operationId": "Delete_Question",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID de la pregunta a eliminar",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/AnswerScale/List": {
      "get": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "List Answer_Scale",
        "description": "Lista de Escala de Respuestas",
        "operationId": "List_AnswerScale",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/AnswerScale/Add": {
      "post": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "Add Answer_Scale",
        "description": "Insertar Respuestas",
        "operationId": "AddAnswerScale",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Nuevos datos agregados",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "and_answer_type_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "ID del tipo de respuesta"
                },
                "ans_value": {
                  "type": "string",
                  "format": "string",
                  "description": "Valor que tiene la respuesta"
                },
                "ans_name": {
                  "type": "string",
                  "format": "string",
                  "description": "Nombre/Descripcion de respuesta"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/AnswerScale/Update": {
      "patch": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "Update Answer_Scale",
        "description": "Actualizar/Modificar Respuestas",
        "operationId": "UpdateAnswerScale",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Nuevos datos actualizados",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "ans_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "ID de la respuesta a editar",
                  "required": true
                },
                "and_answer_type_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "ID del tipo de escala que pertenece"
                },
                "ans_value": {
                  "type": "string",
                  "format": "string",
                  "description": "Valor que tiene la respuesta"
                },
                "ans_name": {
                  "type": "string",
                  "format": "string",
                  "description": "Nombre/Descripcion de respuesta"
                },
                "ans_state": {
                  "type": "boolean",
                  "format": "string",
                  "description": "Estado respuesta"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/AnswerScale/Delete/{ans_id}": {
      "delete": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "Delete Answer_Scale",
        "description": "Eliminar respuesta especifica",
        "operationId": "DeleteAnswerScale",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "name": "ans_id",
            "in": "path",
            "description": "ID respuesta a eliminar",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/AnswerType/List": {
      "get": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "List Answer-Type",
        "description": "Lista tipo de escala",
        "operationId": "List_AnswerType",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/AnswerType/Add": {
      "post": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "Add Answer-Type",
        "description": "Insertar Tipos de respuesta",
        "operationId": "AddAnswerType",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Nuevos datos agregados",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ant_name": {
                  "type": "string",
                  "format": "string",
                  "description": "Nombre Tipo de respuesta"
                },
                "ant_description": {
                  "type": "string",
                  "format": "string",
                  "description": "Descripcion Tipo de respuesta"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/AnswerType/Update": {
      "patch": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "Update Answer-Type",
        "description": "Actualizar/Modificar Tipos de respuestas",
        "operationId": "UpdateAnswerType",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Nuevos datos actualizados",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "ant_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "ID Tipo de respuesta a editar",
                  "required": true
                },
                "ant_name": {
                  "type": "string",
                  "format": "string",
                  "description": "Nombre Tipo de respuesta"
                },
                "ant_description": {
                  "type": "string",
                  "format": "string",
                  "description": "Descripcion Tipo de respuesta"
                },
                "ant_state": {
                  "type": "boolean",
                  "format": "string",
                  "description": "Estado Tipo de respuesta"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/AnswerType/Delete/{ant_id}": {
      "delete": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "Delete Answer-Type",
        "description": "Eliminar Tipo de respuesta especifica",
        "operationId": "DeleteAnswerType",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "name": "ant_id",
            "in": "path",
            "description": "ID Tipo de respuesta a eliminar",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/ProcessCareerPeriod/MenuProcessType": {
      "get": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "Menu Process Type",
        "description": "MENU PROCESS TYPE (AUT-EVAL/CO-EVAL)",
        "operationId": "MenuProcessType",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/ProcessCareerPeriod/MenuCareerPeriodProcessType/{id}": {
      "get": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "Menu Career Period Process Type",
        "description": "MENU CAREER PERIOD (AUT-EVAL/CO-EVAL)",
        "operationId": "MenuCareerPeriodProcessType",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/ProcessQuestion/List/{career_period_id}": {
      "get": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "List Process Question",
        "description": "Listado de Preguntas de Evaluación",
        "operationId": "List_ProcessQuestion",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "name": "career_period_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/ProcessQuestion/ListValueQst/{pcp_id}": {
      "get": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "List Value Questions",
        "description": "Listado de proceso ID con preguntas asociadas",
        "operationId": "ListValueQst",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "name": "pcp_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/ProcessQuestion/Add": {
      "post": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "Add Process Question",
        "description": "Insertar pregunta y proceso de evaluacion",
        "operationId": "Add_ProcessQuestion",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Nuevos datos agregados",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "epc_process_career_period_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "ID proceso carrera-periodo activo"
                },
                "epc_question_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "ID pregunta asignada al proceso carrera-periodo"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/ProcessQuestion/Delete/{epc_id}": {
      "delete": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "Delete Process Question",
        "description": "Eliminar proceso por ID especifico",
        "operationId": "DeleteAnswerType",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "name": "epc_id",
            "in": "path",
            "description": "ID Process Question a eliminar",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Assignament/ListAsig/{career_period_id}": {
      "get": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "List Assignament",
        "description": "LISTA DE PROCESOS ASIGNADOS POR CARRERA PERIODO QUE NO HAN SIDO EJECUTADOS",
        "operationId": "ListAsig",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "name": "career_period_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Assignament/ListAsigEjec/{career_period_id}": {
      "get": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "List Assignament Executed",
        "description": "LISTA DE PROCESOS ASIGNADOS POR CARRERA PERIODO YA EJECUTADOS",
        "operationId": "ListAsigEjec",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "name": "career_period_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Assignament/ListDocentes/{career_period_id}": {
      "get": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "List Docentes",
        "description": "MENU - DOCENTES DE UN PERIODO Y CARRERA QUE NO ESTAN ASIGNADOS A UN PROCESO DE EVALUACION",
        "operationId": "ListDocentes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "name": "career_period_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Assignament/ListCoevaluadores/{career_period_id}": {
      "get": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "List Coevaluadores",
        "description": "MENU - COEVALUADORES DE UN PERIODO Y CARRERA ASIGNADOS A UN PROCESO DE EVALUACION",
        "operationId": "ListCoevaluadores",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "name": "career_period_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Assignament/Add": {
      "post": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "Add Assignament",
        "description": "Insertar Asignacion",
        "operationId": "Add_Assignament",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Nuevos datos agregados",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "pua_process_career_period_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "ID del process career period"
                },
                "pua_user_eval_owner": {
                  "type": "integer",
                  "format": "int64",
                  "description": "ID Docente evaluado"
                },
                "pua_user_eval_execute": {
                  "type": "integer",
                  "format": "int64",
                  "description": "ID Docente que ejecuta la evaluacion"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Assignament/Update": {
      "patch": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "Update Assignament",
        "description": "Actualizar/Modificar proceso de Asignacion",
        "operationId": "Update_Assignament",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Nuevos datos actualizados",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "pua_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "ID de la Asignacion a editar",
                  "required": true
                },
                "pua_process_career_period_id": {
                  "type": "integer",
                  "format": "int64",
                  "description": "ID del process career period"
                },
                "pua_user_eval_owner": {
                  "type": "integer",
                  "format": "int64",
                  "description": "ID Docente evaluado"
                },
                "pua_user_eval_execute": {
                  "type": "integer",
                  "format": "int64",
                  "description": "ID Docente que ejecuta la evaluacion"
                },
                "pua_is_executed": {
                  "type": "boolean",
                  "description": "Estado de ejecucion Activo/Inactivo"
                },
                "pua_date_executed": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Fecha y hora del docente evaluado"
                },
                "pua_state": {
                  "type": "boolean",
                  "description": "Estado de la asignacion Activa/Inactiva"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Assignament/Delete/{pua_id}": {
      "delete": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "Delete Assignament",
        "description": "Eliminar Asignacion por ID",
        "operationId": "Delete_Assignament",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "name": "pua_id",
            "in": "path",
            "description": "ID respuesta a eliminar",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Assignament/ListDocenteAsig/{career_period_id}/{execute_id}": {
      "get": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "Lista docentes asignados al coevaluador sin evaluar",
        "description": "LISTA DE DOCENTES ASIGNADOS A UN PROCESO DE COEVALUACION SIN EJECUTAR",
        "operationId": "ListDocenteAsig",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "name": "career_period_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "execute_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    },
    "/Assignament/ListDocenteEjec/{career_period_id}/{execute_id}": {
      "get": {
        "tags": [
          "Evaluacion y Coevaluacion"
        ],
        "summary": "Lista docentes asignados al coevaluador evaluados",
        "description": "LISTA DE DOCENTES ASIGNADOS A UN PROCESO DE COEVALUACION EJECUTADOS",
        "operationId": "ListDocenteEjec",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "tokenapp",
            "description": "Token para aplicación",
            "required": true,
            "type": "string"
          },
          {
            "name": "career_period_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "execute_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Operación exitosa",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "500": {
            "description": "Error del servidor",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "400": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "addQuestion": {
      "type": "object",
      "properties": {
        "qst_description": {
          "type": "string",
          "format": "string",
          "description": "Ingreso de la pregunta"
        },
        "qst_dimension_id": {
          "type": "integer",
          "format": "int64",
          "description": "ID de dimension de la pregunta"
        },
        "qst_tooltip_text": {
            "type": "string",
            "format": "string",
            "description": "Texto de ayuda de la pregunta"
        },
        "qst_answer_type_id": {
          "type": "integer",
          "format": "int64",
          "description": "Tipo de respuesta",
          "example": "1"
        }
      }
    },
    "insert_urcp": {
      "type": "object",
      "properties": {
        "ur_id": {
          "type": "integer",
          "format": "integer"
        },
        "cp_id": {
          "type": "integer",
          "format": "integer"
        }
      }
    },
    "update_urcp": {
      "type": "object",
      "properties": {
        "urcp_id": {
          "type": "integer"
        },
        "cp_id": {
          "type": "integer"
        }
      }
    },
    "update_password": {
      "type": "object",
      "properties": {
        "oldPassword": {
          "type": "string"

        },
        "newPassword": {
          "type": "string"
        },
        "user_id": {
          "type": "integer"
        }
      }
    },
    "send_email_password": {
      "type": "object",
      "properties": {
        "user_mail": {
          "type": "string",
          "example": "eddermontoya99@gmail.com"
        }
      }
    },
    "update_email_password": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "new_password": {
          "type": "string"
        },
        "token_temp": {
          "type": "string"
        }
      }

    },
    "select_activecp_faculty":{
      "type": "object",
      "properties": {
        "id_unit": {
          "type": "integer"
        }
      }
    },
    "insert_menurol":{
      "type": "object",
      "properties": {
        "menu_id": {
          "type": "integer",
          "format": "integer"
        },
        "rol_id": {
          "type": "integer",
          "format": "integer"
        }
      }
    },
    "up_menurol": {
      "type": "object",
      "properties": {
        "mr_id": {
          "type": "integer",
          "format": "integer"
        },
        "menu_id": {
          "type": "integer",
          "format": "integer"
        },
        "rol_id": {
          "type": "integer",
          "format": "integer"
        }

      }
    },
    "notification_update": {
      "type": "object",
      "properties": {
        "notification_id":{
          "type": "integer"

        },
        "notification_read": {
          "type": "boolean"
        }
      }
    },
    "insert_useRol": {
      "type": "object",
      "properties": {
        "id_rol": {
          "type": "integer",
          "example": 1

        },
        "id_user": {
          "type": "integer",
            "example": 57
        },
        "id_career_period": {
          "type": "integer"
        }
      }
    },
    "up_useRol": {
      "type": "object",
      "properties": {
        "id_user_rol": {
          "type": "integer",
          "example": 1

        },
        "id_rol": {
          "type": "integer",
          "example": 1

        },
        "id_user": {
          "type": "integer",
            "example": 57
        }

      }
    },
    "insert_user": {
       "type": "object",
       "properties": {
         "person_id": {
           "type": "integer",
           "format": "integer"
         },
         "person_ci": {
           "type": "string",
           "format": "string"
         },
         "person_mail": {
           "type": "string",
           "format": "string"
         },
         "person_password": {
           "type": "string"
         },
         "rol_id": {
           "type": "integer"
         },
         "id_career_period": {
           "type": "integer"
         }
       }
    },
    "delete_id": {
      "type": "object",
      "properties": {
        "del_id": {
          "type": "integer",
          "format": "integer",
          "example": 4
        }
      }
    },
    "update_id": {
      "type": "object",
      "properties": {
        "id_user": {
          "type": "integer",
          "format": "integer",
          "example": 4
        }
      }
    },
    "insert_modulo": {
       "type": "object",
       "properties": {

         "mod_name": {
           "type": "string",
           "format": "String",
           "example": "4"
         },
         "mod_description": {
           "type": "string",
           "format": "String",
           "example": "4"
         },
         "mod_order": {
           "type": "integer",
           "format": "integer",
           "example": 56
         },
         "mod_icon_name": {
           "type": "string",
           "format": "String",
           "example": "4"
         }
       }
    },
    "insert_menu": {
       "type": "object",
       "properties": {
         "menu_name": {
           "type": "string",
           "format": "string",
           "example": "string"
         },
         "menu_order": {
           "type": "integer",
           "format": "integer",
           "example": 4
         },
         "menu_module_id": {
           "type": "integer",
           "format": "integer",
           "example": 4
         },
         "menu_parent_id": {
           "type": "integer",
           "format": "integer",
           "example": 4
         },
         "menu_icon_name": {
           "type": "string",
           "format": "string",
           "example": "string"
         },
         "menu_href": {
           "type": "string",
           "format": "string",
           "example": "string"
         },
         "menu_url": {
           "type": "string",
           "format": "string",
           "example": "string"
         }
       }
    },
    "insert_rolsistem": {
       "type": "object",
       "properties": {
         "rol_name": {
           "type": "string",
           "format": "String",
           "example": "4"
         },
         "rol_description": {
           "type": "string",
           "format": "String",
           "example": "numero 4"
         }
       }
    },
    "up_rolsistem": {
       "type": "object",
       "properties": {
         "rol_id": {
           "type": "integer",
           "format": "integer",
           "example": 4
         },
         "rol_name": {
           "type": "string",
           "format": "String",
           "example": "4"
         },
         "rol_description":{
           "type": "string",
           "format": "String",
           "example": "numero 4"
         }
       }
    },
    "up_modulo": {
       "type": "object",
       "properties": {
         "mod_id": {
           "type": "integer",
           "format": "integer",
           "example": 4
         },
         "mod_name": {
           "type": "string",
           "format": "String",
           "example": "4"
         },
         "mod_description": {
           "type": "string",
           "format": "String",
           "example": "4"
         },
         "mod_order": {
           "type": "string",
           "format": "String",
           "example": ""
         },"mod_icon_name": {
           "type": "string",
           "format": "String",
           "example": "4"
         }
       }
    },
    "up_menu": {
       "type": "object",
       "properties": {
         "menu_id": {
           "type": "integer",
           "format": "integer",
           "example": 4
         },
         "menu_name": {
           "type": "string",
           "format": "string",
           "example": "string"
         },
         "menu_order": {
           "type": "integer",
           "format": "integer",
           "example": 4
         },
         "menu_module_id": {
           "type": "integer",
           "format": "integer",
           "example": 4
         },
         "menu_parent_id": {
           "type": "integer",
           "format": "integer",
           "example": 4
         },
         "menu_icon_name": {
           "type": "string",
           "format": "string",
           "example": "string"
         },
         "menu_href": {
           "type": "string",
           "format": "string",
           "example": "string"
         },
         "menu_url": {
           "type": "string",
           "format": "string",
           "example": "string"
         }
       }
    },
    "loginUserDef": {
       "type": "object",
       "properties": {
         "login_user": {
           "type": "string",
           "format": "string",
           "example": "admin"
         },
         "login_password": {
           "type": "string",
           "format": "string",
           "example": "21232f297a57a5a743894a0e4a801fc3"
         },
         "ip_address": {
           "type": "string",
           "format": "string",
           "example": "192.168.3.2"
         },
         "host_name": {
           "type": "string",
           "format": "string",
           "example": "localhost"
         }
       }
    },
    "logoutUserDef": {
      "type": "object",
      "properties": {
        "logId": {
          "type": "integer"
        }
      }
    },
    "AcademyUnitResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The unique identifier of the academic unit"
        },
        "name": {
          "type": "string",
          "description": "The name of the academic unit"
        },
        "description": {
          "type": "string",
          "description": "A brief description of the academic unit"
        },
        "state": {
          "type": "boolean",
          "description": "The status of the academic unit (active/inactive)"
        },
        "date_created": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time the academic unit was created"
        },
        "date_updated": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time the academic unit was last updated"
        }
      }
    },
    "AcademyUnit": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID de la unidad académica"
        },
        "name": {
          "type": "string",
          "description": "Nombre de la unidad académica"
        },
        "id_ies": {
          "type": "string",
          "description": "ID de la institución educativa"
        },
        "description": {
          "type": "string",
          "description": "Descripción de la unidad académica"
        },
        "phone_number": {
          "type": "string",
          "description": "Número de teléfono de la unidad académica"
        },
        "address": {
          "type": "string",
          "description": "Dirección de la unidad académica"
        },
        "manager_name": {
          "type": "string",
          "description": "Nombre del director de la unidad académica"
        },
        "web_site": {
          "type": "string",
          "description": "Sitio web de la unidad académica"
        },
        "mail_address": {
          "type": "string",
          "description": "Correo electrónico de la unidad académica"
        },
        "state": {
          "type": "boolean",
          "description": "Estado de la unidad académica (activo/inactivo)"
        },
        "user_created": {
          "type": "string",
          "description": "ID del usuario que creó la unidad académica"
        },
        "date_created": {
          "type": "string",
          "format": "date-time",
          "description": "Fecha y hora de creación de la unidad académica"
        },
        "user_modified": {
          "type": "string",
          "description": "ID del usuario que modificó la unidad académica"
        },
        "date_modified": {
          "type": "string",
          "format": "date-time",
          "description": "Fecha y hora de modificación de la unidad académica"
        },
        "user_deleted": {
          "type": "string",
          "description": "ID del usuario que eliminó la unidad académica"
        },
        "date_deleted": {
          "type": "string",
          "format": "date-time",
          "description": "Fecha y hora de eliminación de la unidad académica"
        }
      },
      "required": [
        "name",
        "id_ies",
        "description",
        "phone_number",
        "address",
        "manager_name",
        "web_site",
        "mail_address",
        "state",
        "user_created",
        "date_created"
      ]
    },
    "CareerPeriodResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "el ID del período de carrera."
        },
        "name": {
          "type": "string",
          "description": "Nombre del período de carrera"
        },
        "description": {
          "type": "string",
          "description": "Desripcion del periodo "
        }
      }
    },
    "AdminCicleResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The unique identifier of the admin cycle"
        },
        "name": {
          "type": "string",
          "description": "The name of the admin cycle"
        },
        "description": {
          "type": "string",
          "description": "A description of the admin cycle"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "description": "The start date of the admin cycle"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "description": "The end date of the admin cycle"
        },
        "status": {
          "type": "string",
          "description": "The status of the admin cycle (active, inactive, etc.)"
        }
      }
    },
    "AdminPersonResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The unique identifier of the admin person"
        },
        "first_name": {
          "type": "string",
          "description": "The first name of the admin person"
        },
        "last_name": {
          "type": "string",
          "description": "The last name of the admin person"
        },
        "email": {
          "type": "string",
          "format": "email",
          "description": "The email address of the admin person"
        },
        "user_created": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time the admin person was created (optional)"
        },
        "user_modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time the admin person was last modified (optional)"
        }
      }
    },
    "ies": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID de la unidad académica"
        },
        "name": {
          "type": "string",
          "description": "Nombre de la unidad académica"
        },
        "id_ies": {
          "type": "string",
          "description": "ID de la institución educativa"
        },
        "description": {
          "type": "string",
          "description": "Descripción de la unidad académica"
        },
        "phone_number": {
          "type": "string",
          "description": "Número de teléfono de la unidad académica"
        },
        "address": {
          "type": "string",
          "description": "Dirección de la unidad académica"
        },
        "manager_name": {
          "type": "string",
          "description": "Nombre del director de la unidad académica"
        },
        "web_site": {
          "type": "string",
          "description": "Sitio web de la unidad académica"
        },
        "mail_address": {
          "type": "string",
          "description": "Correo electrónico de la unidad académica"
        },
        "state": {
          "type": "string",
          "description": "Estado de la unidad académica (activo/inactivo)"
        },
        "user_created": {
          "type": "string",
          "description": "ID del usuario que creó la unidad académica"
        },
        "date_created": {
          "type": "string",
          "format": "date-time",
          "description": "Fecha y hora de creación de la unidad académica"
        },
        "user_modified": {
          "type": "string",
          "description": "ID del usuario que modificó la unidad académica"
        },
        "date_modified": {
          "type": "string",
          "format": "date-time",
          "description": "Fecha y hora de modificación de la unidad académica"
        },
        "user_deleted": {
          "type": "string",
          "description": "ID del usuario que eliminó la unidad académica"
        },
        "date_deleted": {
          "type": "string",
          "format": "date-time",
          "description": "Fecha y hora de eliminación de la unidad académica"
        }
      },
      "required": [
        "name",
        "id_ies",
        "description",
        "address",
        "manager_name",
        "web_site",
        "mail_address",
        "state",
        "user_created"
      ]
    },
    "AdminiesResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The unique identifier of the admin cycle"
        },
        "name": {
          "type": "string",
          "description": "The name of the admin cycle"
        },
        "description": {
          "type": "string",
          "description": "A description of the admin cycle"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "description": "The start date of the admin cycle"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "description": "The end date of the admin cycle"
        },
        "status": {
          "type": "string",
          "description": "The status of the admin cycle (active, inactive, etc.)"
        }
      }
    },
    "MaritalStatusResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The unique identifier of the admin cycle"
        },
        "name": {
          "type": "string",
          "description": "The name of the admin cycle"
        },
        "description": {
          "type": "string",
          "description": "A description of the admin cycle"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "description": "The start date of the admin cycle"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "description": "The end date of the admin cycle"
        },
        "status": {
          "type": "string",
          "description": "The status of the admin cycle (active, inactive, etc.)"
        }
      }
    },
    "ParameterListResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "el ID del período de carrera."
        },
        "name": {
          "type": "string",
          "description": "Nombre del período de carrera"
        },
        "description": {
          "type": "string",
          "description": "Desripcion del periodo "
        }
      }
    },
    "PeriodResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "el ID del período de carrera."
        },
        "name": {
          "type": "string",
          "description": "Nombre del período de carrera"
        },
        "description": {
          "type": "string",
          "description": "Desripcion del periodo "
        }
      }
    },
    "PersonGenreResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "el ID del período de carrera."
        },
        "name": {
          "type": "string",
          "description": "Nombre del período de carrera"
        },
        "description": {
          "type": "string",
          "description": "Desripcion del periodo "
        }
      }
    },
    "UniversitycareerResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "el ID del período de carrera."
        },
        "name": {
          "type": "string",
          "description": "Nombre del período de carrera"
        },
        "description": {
          "type": "string",
          "description": "Desripcion del periodo "
        }
      }
    },
    "Cursos": {
     "type": "object",
     "properties": {
       "curso": {
         "type": "string",
         "format": "string"
       },
       "tipo": {
         "type": "string",
         "format": "string"
       },
       "periodo": {
         "type": "string",
         "format": "string"
       },
       "carrera": {
         "type": "string",
         "format": "string"
       }
      }
     },
    "CursosPeriodo": {
     "type": "object",
     "properties": {
       "curso": {
         "type": "string",
         "format": "string"
       },
       "tipo": {
         "type": "string",
         "format": "string"
       },
       "periodo": {
         "type": "string",
         "format": "string"
       }

      }
     },
    "Categorias": {
     "type": "object",
     "properties": {
       "curso": {
         "type": "string",
         "format": "string"
       },
       "tipo": {
         "type": "string",
         "format": "string"
       }
      }
     },
    "ListRequisitos": {
     "type": "object",
     "properties": {
       "requisito": {
         "type": "string"
       }
      }
     },
    "MoodleCons": {
     "type": "object",
     "properties": {
       "wstoken": {
         "type": "string"
       },
       "wsfunction": {
         "type": "string"
       },
       "key": {
         "type": "string"
       },
       "value": {
         "type": "string"
       }
      }
     },
    "MoodleCreate": {
     "type": "object",
     "properties": {
       "wstoken": {
         "type": "string"
       },
       "wsfunction": {
         "type": "string"
        },
        "fullname": {
        "type": "string",
        "description": "Nombre completo del curso"
        },
        "shortname": {
          "type": "string",
          "description": "Nombre corto del curso"
        },
        "categoryid": {
          "type": "integer",
          "description": "ID de la categoría del curso"
        },
        "idnumber": {
          "type": "string",
          "description": "Número de ID del curso"
        },
        "summary": {
          "type": "string",
          "description": "Resumen del curso"
        },
        "summaryformat": {
          "type": "integer",
          "description": "Formato del resumen del curso",
          "default": 1
        },
        "format": {
          "type": "string",
          "description": "Formato del curso",
          "default": "topics"
        },
        "showgrades": {
          "type": "integer",
          "description": "Mostrar calificaciones",
          "default": 1
        },
        "newsitems": {
          "type": "integer",
          "description": "Número de elementos de noticias en la página del curso",
          "default": 5
        },
        "startdate": {
          "type": "string",
          "format": "date-time",
          "description": "Fecha de inicio del curso en timestamp UNIX"
        },
        "enddate": {
           "type": "string",
           "format": "date-time",
          "description": "Fecha de fin del curso en timestamp UNIX"
        },
        "numsections": {
          "type": "integer",
          "description": "Número de secciones del curso",
          "default": 1
        },
        "maxbytes": {
          "type": "integer",
          "description": "Tamaño máximo de archivo que se puede subir",
          "default": 0
        },
        "showreports": {
          "type": "integer",
          "description": "Mostrar informes de actividad",
          "default": 0
        },
        "visible": {
          "type": "integer",
          "description": "Curso visible para los estudiantes",
          "default": 1
        },
        "hiddensections": {
          "type": "integer",
          "description": "Cómo se muestran las secciones ocultas",
          "default": 0
        },
        "groupmode": {
          "type": "integer",
          "description": "Modo de grupo del curso",
          "default": 0
        },
        "groupmodeforce": {
          "type": "integer",
          "description": "Forzar el modo de grupo",
          "default": 0
        },
        "defaultgroupingid": {
          "type": "integer",
          "description": "ID de agrupación predeterminado",
          "default": 0
        },
        "enablecompletion": {
          "type": "integer",
          "description": "Habilitar el seguimiento de finalización",
          "default": 0
        },
        "completionnotify": {
          "type": "integer",
          "description": "Notificar sobre la finalización",
          "default": 0
        },
        "lang": {
          "type": "string",
          "description": "Idioma del curso"
        },
        "forcetheme": {
          "type": "string",
          "description": "Nombre del tema forzado"
        },
        "courseformatoptions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Nombre de la opción de formato del curso",
                "default": "hiddensections"
              },
              "value": {
                "type": "string",
                "description": "Valor de la opción de formato del curso"
              }
            }
          }
        },
        "customfields": {
          "type": "string"
        }
      }

     },
    "CreateCursos": {
     "type": "object",
     "properties": {
       "tipo": {
         "type": "string",
         "format": "string"
       },
       "id_curso": {
         "type": "integer"
       },
       "namecurso": {
         "type": "string",
         "format": "string"
       },
       "shortnamecurso": {
         "type": "string",
         "format": "string"
       },
       "descripcion": {
         "type": "string",
         "format": "string"
       },
       "id_moodle": {
         "type": "integer"
       },
       "id_categoria": {
         "type": "integer"
       },
       "id_dimension": {
         "type": "integer"
       },
       "datestart": {
         "type": "string",
         "format": "date-time"
       },
       "dateend": {
         "type": "string",
         "format": "date-time"
       },
       "isclosed": {
         "type": "boolean"
       },
       "state": {
         "type": "boolean"
       },
       "user": {
         "type": "string",
         "format": "string"
       },
       "date": {
         "type": "string",
         "format": "date-time"
       },
       "showreport": {
         "type": "integer"
         },
        "showhidden": {
         "type": "integer"
         },
        "showqualification": {
         "type": "integer"
         },
        "endcourse": {
         "type": "integer"
         }
     }
     },
    "CreateReq": {
     "type": "object",
     "properties": {
       "id_criterio": {
         "type": "integer"
       },

       "id_nivel": {
         "type": "integer"
       },

       "descripcion": {
         "type": "string",
         "format": "string"
       },
       "maxrange": {
         "type": "integer"
       },
       "id_semaforo": {
         "type": "integer"
       },

       "state": {
         "type": "boolean"
       }

     }
     },
    "CreateCursosAsignacion": {
     "type": "object",
     "properties": {
       "id_asignacion": {
         "type": "integer"
       },
       "state": {
         "type": "boolean"
       },
       "date": {
         "type": "string",
         "format": "date-time"
       },
       "id_asesor": {
         "type": "integer"
       },
       "id_curso": {
         "type": "integer"
       },
       "id_user": {
         "type": "integer"
       }

      }
     },
    "Content": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "contentData": {
          "type": "string"
        }
      }
    },
    "Tokens": {
     "type": "object",
     "properties": {
       "curso": {
         "type": "string",
         "format": "string"
       },
       "tipo": {
         "type": "string",
         "format": "string"
       },
       "periodo": {
         "type": "string",
         "format": "string"
       },
       "carrera": {
         "type": "string",
         "format": "string"
       }
      }
     },
    "NotFound": {
      "type": "object",
      "properties": {
        "success": {
            "type": "boolean",
            "default": false
        },
        "message": {
            "type": "string",
            "example": "Recurso no encontrado"
        },
        "data": {
          "type": "string",
          "example": "{}"
        },
        "status": {
          "type": "string",
          "example": "404"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "success": {
            "type": "boolean",
            "default": false
        },
        "message": {
            "type": "string"
        },
        "data": {
          "type": "string",
          "example": "{}"
        },
        "status": {
          "type": "string",
          "example": "500"
        }
      }
    },
    "Response": {
      "type": "object",
      "properties": {
        "success": {
            "type": "boolean",
            "default": false
        },
        "message": {
            "type": "string",
            "example": "ok"
        },
        "data": {
          "type": "string",
          "example": "{}"
        },
        "status": {
          "type": "string",
          "example": "200"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}